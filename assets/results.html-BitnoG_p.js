import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as l,d as n,e as a,b as t,w as o,r,o as i}from"./app-D8Yu_QJL.js";const c={};function d(k,s){const e=r("RouteLink");return i(),u("div",null,[s[24]||(s[24]=l('<p><code>Results</code> are objects that driver returns to python with some data inside.</p><p>Currently there are two results:</p><ul><li><code>QueryResult</code> - for result with multiple rows</li><li><code>SingleQueryResult</code> - for result with exactly one row</li></ul><h2 id="queryresult-methods" tabindex="-1"><a class="header-anchor" href="#queryresult-methods"><span>QueryResult methods</span></a></h2><h3 id="result" tabindex="-1"><a class="header-anchor" href="#result"><span>Result</span></a></h3><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4>',6)),n("ul",null,[n("li",null,[s[1]||(s[1]=n("code",null,"custom_decoders",-1)),s[2]||(s[2]=a(": custom decoders for unsupported types. ")),t(e,{to:"/usage/types/advanced_type_usage.html"},{default:o(()=>s[0]||(s[0]=[a("Read more")])),_:1})])]),s[25]||(s[25]=l(`<p>Get the result as a list of dicts</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> ConnectionPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> QueryResult <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    result<span class="token punctuation">:</span> List<span class="token punctuation">[</span>Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> query_result<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="as-class" tabindex="-1"><a class="header-anchor" href="#as-class"><span>As class</span></a></h3><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4>`,4)),n("ul",null,[s[6]||(s[6]=n("li",null,[n("code",null,"as_class"),a(": Custom class from Python.")],-1)),n("li",null,[s[4]||(s[4]=n("code",null,"custom_decoders",-1)),s[5]||(s[5]=a(": custom decoders for unsupported types. ")),t(e,{to:"/usage/types/advanced_type_usage.html"},{default:o(()=>s[3]||(s[3]=[a("Read more")])),_:1})])]),s[26]||(s[26]=l(`<p>Get the result as a list of passed class instances. Passed class can easily be either pydantic or msgspec model.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ExampleOfAsClass</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> ConnectionPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> QueryResult <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    class_results<span class="token punctuation">:</span> List<span class="token punctuation">[</span>ExampleOfAsClass<span class="token punctuation">]</span> <span class="token operator">=</span> query_result<span class="token punctuation">.</span>as_class<span class="token punctuation">(</span>
        as_class<span class="token operator">=</span>ExampleOfAsClass<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="row-factory" tabindex="-1"><a class="header-anchor" href="#row-factory"><span>Row Factory</span></a></h3><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4>`,4)),n("ul",null,[s[10]||(s[10]=n("li",null,[n("code",null,"row_factory"),a(": custom callable object.")],-1)),n("li",null,[s[8]||(s[8]=n("code",null,"custom_decoders",-1)),s[9]||(s[9]=a(": custom decoders for unsupported types. ")),t(e,{to:"/usage/types/advanced_type_usage.html"},{default:o(()=>s[7]||(s[7]=[a("Read more")])),_:1})])]),n("p",null,[t(e,{to:"/usage/row_factories/overall_usage.html"},{default:o(()=>s[11]||(s[11]=[a("Read more")])),_:1})]),s[27]||(s[27]=l('<h2 id="singlequeryresult-methods" tabindex="-1"><a class="header-anchor" href="#singlequeryresult-methods"><span>SingleQueryResult methods</span></a></h2><h3 id="result-1" tabindex="-1"><a class="header-anchor" href="#result-1"><span>Result</span></a></h3><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4>',3)),n("ul",null,[n("li",null,[s[13]||(s[13]=n("code",null,"custom_decoders",-1)),s[14]||(s[14]=a(": custom decoders for unsupported types. ")),t(e,{to:"/usage/types/advanced_type_usage.html"},{default:o(()=>s[12]||(s[12]=[a("Read more")])),_:1})])]),s[28]||(s[28]=l(`<p>Get the result as a dict</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> ConnectionPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> SingleQueryResult <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>fetch_row<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users WHERE id = $1&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    result<span class="token punctuation">:</span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span> <span class="token operator">=</span> query_result<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="as-class-1" tabindex="-1"><a class="header-anchor" href="#as-class-1"><span>As class</span></a></h3><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4>`,4)),n("ul",null,[s[18]||(s[18]=n("li",null,[n("code",null,"as_class"),a(": Custom class from Python.")],-1)),n("li",null,[s[16]||(s[16]=n("code",null,"custom_decoders",-1)),s[17]||(s[17]=a(": custom decoders for unsupported types. ")),t(e,{to:"/usage/types/advanced_type_usage.html"},{default:o(()=>s[15]||(s[15]=[a("Read more")])),_:1})])]),s[29]||(s[29]=l(`<p>Get the result as a passed class instance. Passed class can easily be either pydantic or msgspec model.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ExampleOfAsClass</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> ConnectionPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> SingleQueryResult <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>fetch_row<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users WHERE id = $1&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    class_results<span class="token punctuation">:</span> ExampleOfAsClass <span class="token operator">=</span> query_result<span class="token punctuation">.</span>as_class<span class="token punctuation">(</span>
        as_class<span class="token operator">=</span>ExampleOfAsClass<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="row-factory-1" tabindex="-1"><a class="header-anchor" href="#row-factory-1"><span>Row Factory</span></a></h3><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4>`,4)),n("ul",null,[s[22]||(s[22]=n("li",null,[n("code",null,"row_factory"),a(": custom callable object.")],-1)),n("li",null,[s[20]||(s[20]=n("code",null,"custom_decoders",-1)),s[21]||(s[21]=a(": custom decoders for unsupported types. ")),t(e,{to:"/usage/types/advanced_type_usage.html"},{default:o(()=>s[19]||(s[19]=[a("Read more")])),_:1})])]),n("p",null,[t(e,{to:"/usage/row_factories/overall_usage.html"},{default:o(()=>s[23]||(s[23]=[a("Read more")])),_:1})])])}const y=p(c,[["render",d],["__file","results.html.vue"]]),b=JSON.parse('{"path":"/components/results.html","title":"Results","lang":"en-US","frontmatter":{"title":"Results","description":"Results are objects that driver returns to python with some data inside. Currently there are two results: QueryResult - for result with multiple rows SingleQueryResult - for res...","head":[["meta",{"property":"og:url","content":"https://psqlpy-python.github.io/components/results.html"}],["meta",{"property":"og:site_name","content":"PSQLPy"}],["meta",{"property":"og:title","content":"Results"}],["meta",{"property":"og:description","content":"Results are objects that driver returns to python with some data inside. Currently there are two results: QueryResult - for result with multiple rows SingleQueryResult - for res..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-09T13:56:49.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-09T13:56:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Results\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-09T13:56:49.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"QueryResult methods","slug":"queryresult-methods","link":"#queryresult-methods","children":[{"level":3,"title":"Result","slug":"result","link":"#result","children":[]},{"level":3,"title":"As class","slug":"as-class","link":"#as-class","children":[]},{"level":3,"title":"Row Factory","slug":"row-factory","link":"#row-factory","children":[]}]},{"level":2,"title":"SingleQueryResult methods","slug":"singlequeryresult-methods","link":"#singlequeryresult-methods","children":[{"level":3,"title":"Result","slug":"result-1","link":"#result-1","children":[]},{"level":3,"title":"As class","slug":"as-class-1","link":"#as-class-1","children":[]},{"level":3,"title":"Row Factory","slug":"row-factory-1","link":"#row-factory-1","children":[]}]}],"git":{"createdTime":1739109409000,"updatedTime":1739109409000,"contributors":[{"name":"chandr-andr (Kiselev Aleksandr)","email":"chandr@chandr.net","commits":1}]},"filePathRelative":"components/results.md","localizedDate":"February 9, 2025","autoDesc":true,"excerpt":"<p><code>Results</code> are objects that driver returns to python with some data inside.</p>\\n<p>Currently there are two results:</p>\\n<ul>\\n<li><code>QueryResult</code> - for result with multiple rows</li>\\n<li><code>SingleQueryResult</code> - for result with exactly one row</li>\\n</ul>\\n<h2>QueryResult methods</h2>"}');export{y as comp,b as data};
